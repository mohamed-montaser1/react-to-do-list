{"version":3,"sources":["Components/Message/index.js","Components/Preview/index.js","Components/Notes/NotesContainer.js","Components/Notes/NotesList.js","Components/Notes/NoteItem.js","Components/Alert/index.js","App.js","index.js"],"names":["Message","props","className","title","Preview","children","NotesContainer","NotesList","NoteItem","noteClicked","active","onClick","Alert","validationMessages","map","message","index","App","useState","notes","setNotes","setTitle","content","setContent","selectedNote","setSelectedNote","creating","setCreating","editing","setEditing","validationError","setValidationError","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","setTimeout","saveToLocalStorage","key","value","validate","passed","push","changeTitleHandler","event","target","changeContentHandler","saveNoteHandler","note","id","Date","updatedNotes","editNoteHandler","find","updateNoteHandler","noteIndex","findIndex","deleteNoteHandler","splice","noteId","type","name","placeholder","onChange","rows","href","length","noteDisplay","getPreview","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b0b2dde.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Message = (props) => <h2 className=\"center\">{props.title}</h2>;\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n\r\nconst Preview = (props) => (\r\n  <div className=\"preview-section\">{props.children}</div>\r\n);\r\n\r\nexport default Preview;\r\n","import React from \"react\";\r\n\r\nconst NotesContainer = (props) => (\r\n  <div className=\"notes-section\">{props.children}</div>\r\n);\r\n\r\nexport default NotesContainer;\r\n","import React from \"react\";\r\n\r\nconst NotesList = (props) => (\r\n  <ul className=\"notes-list\">{props.children}</ul>\r\n)\r\n\r\nexport default NotesList;\r\n","import React from \"react\";\r\n\r\nconst NoteItem = (props) => {\r\n  const { title, noteClicked, active } = props;\r\n  return (\r\n    <li className={`note-item ${active && \"active\"}`} onClick={noteClicked}>\r\n      {title}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NoteItem;\r\n","import React from \"react\";\r\n\r\nconst Alert = (props) => {\r\n  return (\r\n    <div className=\"alert-container\">\r\n      <ul className=\"text-left\">\r\n        {props.validationMessages.map((message, index) => (\r\n          <li key={index}>{message}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Message from \"./Components/Message\";\nimport Preview from \"./Components/Preview\";\nimport NotesContainer from \"./Components/Notes/NotesContainer\";\nimport NotesList from \"./Components/Notes/NotesList\";\nimport NoteItem from \"./Components/Notes/NoteItem\";\nimport Alert from \"./Components/Alert\";\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [creating, setCreating] = useState(false);\n  const [editing, setEditing] = useState(false);\n  const [validationError, setValidationError] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"notes\")) {\n      setNotes(JSON.parse(localStorage.getItem(\"notes\")));\n    } else {\n      localStorage.setItem(\"notes\", JSON.stringify([]));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (validationError !== 0) {\n      setTimeout(() => {\n        setValidationError([]);\n      }, 5000);\n    }\n  }, [validationError]);\n\n  const saveToLocalStorage = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  const validate = () => {\n    const validationError = [];\n    let passed = true;\n\n    if (!title) {\n      validationError.push(\"write task's title\");\n      passed = false;\n    }\n\n    if (!content) {\n      validationError.push(\"write task's content\");\n      passed = false;\n    }\n\n    setValidationError(validationError);\n\n    return passed;\n  };\n\n  // change title\n  const changeTitleHandler = (event) => {\n    setTitle(event.target.value);\n  };\n\n  // change content\n  const changeContentHandler = (event) => {\n    setContent(event.target.value);\n  };\n\n  // save note\n\n  const saveNoteHandler = () => {\n    if (!validate()) return;\n\n    let note = {\n      id: new Date(),\n      title: title,\n      content: content,\n    };\n\n    const updatedNotes = [...notes, note];\n    saveToLocalStorage(\"notes\", updatedNotes);\n    setNotes(updatedNotes);\n    setCreating(false);\n    setSelectedNote(note.id);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n\n  const selectedNoteHandler = (noteId) => {\n    setSelectedNote(noteId);\n    setEditing(false);\n    setCreating(false);\n  };\n\n  const editNoteHandler = () => {\n    const note = notes.find((note) => note.id === selectedNote);\n    setEditing(true);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n\n  // update note handler\n  const updateNoteHandler = () => {\n    if (!validate()) return;\n\n    const updatedNotes = [...notes];\n    const noteIndex = updatedNotes.findIndex(\n      (note) => note.id === selectedNote\n    );\n    updatedNotes[noteIndex] = {\n      id: selectedNote,\n      title: title,\n      content: content,\n    };\n    saveToLocalStorage(\"notes\", updatedNotes);\n    setNotes(updatedNotes);\n    setEditing(false);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n\n  // delete note handler\n  const deleteNoteHandler = () => {\n    const updatedNotes = [...notes];\n    const noteIndex = updatedNotes.findIndex(\n      (note) => note.id === selectedNote\n    );\n    updatedNotes.splice(noteIndex, 1);\n    saveToLocalStorage(\"notes\", updatedNotes);\n    setNotes(updatedNotes);\n    setSelectedNote(null);\n  };\n\n  const getAddNote = () => {\n    return (\n      <div>\n        <h2>Add New Note</h2>\n        <div>\n          <input\n            type=\"text\"\n            name=\"title\"\n            className=\"form-input mb-30\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={changeTitleHandler}\n          />\n\n          <textarea\n            rows=\"10\"\n            name=\"content\"\n            className=\"form-input\"\n            placeholder=\"Content\"\n            value={content}\n            onChange={changeContentHandler}\n          />\n\n          <a href=\"#\" className=\"button green\" onClick={saveNoteHandler}>\n            Save\n          </a>\n        </div>\n      </div>\n    );\n  };\n\n  const getPreview = () => {\n    if (notes.length === 0) {\n      return <Message title=\"No Notes Yet\" />;\n    }\n\n    if (!selectedNote) {\n      return <Message title=\"Please Select Note\" />;\n    }\n\n    const note = notes.find((note) => {\n      return note.id === selectedNote;\n    });\n\n    let noteDisplay = (\n      <div>\n        <h2>{note.title}</h2>\n        <p>{note.content}</p>\n      </div>\n    );\n\n    if (editing) {\n      noteDisplay = (\n        <div>\n          <h2>Editing Note</h2>\n          <form>\n            <input\n              type=\"text\"\n              name=\"title\"\n              className=\"form-input mb-30\"\n              placeholder=\"Title\"\n              value={title}\n              onChange={changeTitleHandler}\n            />\n            <textarea\n              rows=\"10\"\n              name=\"content\"\n              className=\"form-input\"\n              placeholder=\"Content\"\n              value={content}\n              onChange={changeContentHandler}\n            />\n            <a href=\"#\" className=\"button green\" onClick={updateNoteHandler}>\n              Save\n            </a>\n          </form>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {!editing && (\n          <div className=\"note-operations\">\n            <a href=\"#\" onClick={editNoteHandler}>\n              <i className=\"fa fa-pencil-alt\" />\n            </a>\n            <a href=\"#\" onClick={deleteNoteHandler}>\n              <i className=\"fa fa-trash\" />\n            </a>\n          </div>\n        )}\n        {noteDisplay}\n      </div>\n    );\n  };\n\n  const AddNoteHandler = () => {\n    setCreating(true);\n    setEditing(false);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <NotesContainer>\n        <NotesList>\n          {notes.map((note) => (\n            <NoteItem\n              key={note.id}\n              title={note.title}\n              noteClicked={() => selectedNoteHandler(note.id)}\n              active={selectedNote === note.id}\n            />\n          ))}\n        </NotesList>\n        <button className=\"add-btn\" onClick={AddNoteHandler}>\n          +\n        </button>\n      </NotesContainer>\n      <Preview>{creating ? getAddNote() : getPreview()}</Preview>\n      {validationError.length !== 0 && (\n        <Alert validationMessages={validationError} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}